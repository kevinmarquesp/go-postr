services:
  server:
    build:
      context: "."
      dockerfile: "Dockerfile"
    depends_on:
      - "postgres"
    env_file:
      - ".env"
    ports:
      - "8080:8000" # Expose to a different port.
    environment:
      POSTGRES_HOST: "postgres" # Overwrite the host inside the container.
    entrypoint: "sh -c 'while true; do make postgres/migrations/up 2>/dev/null && break; done; ./bin/server'"
    networks:
      - "netdev"
    profiles:
      - "server"
      - "all"
      - "app"

  postgres:
    image: "docker.io/postgres"
    restart: "always"
    env_file:
      - ".env"
    ports:
      - "5432:5432"
    networks:
      - "netdev"
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "512M"
    profiles:
      - "postgres"
      - "all"
      - "db"
      - "app"

  pgadmin:
    image: "docker.io/dpage/pgadmin4"
    depends_on:
      - "postgres"
    env_file:
      - ".env"
    ports:
      - "5050:80"
    networks:
      - "netdev"
    deploy:
      resources:
        limits:
          cpus: "1.5"
          memory: "256M"
    profiles:
      - "pgadmin"
      - "all"
      - "db"

networks:
  netdev:
    driver: "bridge"
